# Firefox Facebook Test - ‡πÉ‡∏ä‡πâ Firefox ‡πÅ‡∏ó‡∏ô Chrome
import os
import time
from selenium import webdriver
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.common.by import By
from webdriver_manager.firefox import GeckoDriverManager

def test_facebook_firefox():
    print("ü¶ä Firefox Facebook Test with Profile")
    print("=" * 40)
    
    # Kill existing Firefox
    os.system("pkill -f Firefox")
    time.sleep(3)
    
    # ‡∏´‡∏≤ Firefox profiles
    firefox_profile_dir = "/Users/fadil/Library/Application Support/Firefox/Profiles"
    
    print("üîç Looking for Firefox profiles...")
    try:
        profiles = [d for d in os.listdir(firefox_profile_dir) if os.path.isdir(os.path.join(firefox_profile_dir, d))]
        print("üìã Available Firefox profiles:")
        for i, profile in enumerate(profiles):
            print(f"   {i+1}. {profile}")
        
        if not profiles:
            print("‚ùå No Firefox profiles found!")
            return
            
        # ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å profile ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ profile ‡πÅ‡∏£‡∏Å
        choice = input(f"\nSelect profile (1-{len(profiles)}) or Enter for first profile: ").strip()
        
        if choice.isdigit() and 1 <= int(choice) <= len(profiles):
            selected_profile = profiles[int(choice)-1]
        else:
            selected_profile = profiles[0]
            
        profile_path = os.path.join(firefox_profile_dir, selected_profile)
        print(f"‚úÖ Using profile: {selected_profile}")
        print(f"üìÅ Profile path: {profile_path}")
        
    except Exception as e:
        print(f"‚ùå Error finding profiles: {e}")
        return
    
    # Firefox settings with profile
    firefox_options = webdriver.FirefoxOptions()
    firefox_options.add_argument("--width=1200")
    firefox_options.add_argument("--height=800")
    
    # ‡πÉ‡∏ä‡πâ profile ‡∏ó‡∏µ‡πà‡∏°‡∏µ Facebook login
    firefox_options.add_argument("-profile")
    firefox_options.add_argument(profile_path)
    
    try:
        print("üì¶ Starting Firefox with existing profile...")
        service = Service(GeckoDriverManager().install())
        driver = webdriver.Firefox(service=service, options=firefox_options)
        
        print("‚úÖ Firefox started successfully with profile")
        driver.maximize_window()
        time.sleep(3)
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        print(f"üîç Initial URL: {driver.current_url}")
        print(f"üîç Initial Title: {driver.title}")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏õ Facebook
        print("üîÑ Navigating to Facebook...")
        driver.get("https://www.facebook.com")
        time.sleep(8)  # ‡∏£‡∏≠‡∏ô‡∏≤‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ profile ‡πÇ‡∏´‡∏•‡∏î
        
        current_url = driver.current_url
        title = driver.title
        
        print(f"üìç Facebook URL: {current_url}")
        print(f"üìù Facebook Title: {title}")
        
        if "facebook.com" in current_url:
            print("‚úÖ SUCCESS - Reached Facebook!")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ login ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
            try:
                print("üîç Checking login status...")
                
                # ‡∏´‡∏≤ elements ‡∏ï‡πà‡∏≤‡∏á‡πÜ
                marketplace_links = driver.find_elements(By.XPATH, "//a[contains(@href, '/marketplace')]")
                login_forms = driver.find_elements(By.XPATH, "//input[@type='email']")
                password_forms = driver.find_elements(By.XPATH, "//input[@type='password']")
                profile_elements = driver.find_elements(By.XPATH, "//div[@role='banner']")
                
                print(f"üõçÔ∏è  Marketplace links: {len(marketplace_links)}")
                print(f"üìß Email inputs: {len(login_forms)}")
                print(f"üîí Password inputs: {len(password_forms)}")
                print(f"üè† Profile elements: {len(profile_elements)}")
                
                if marketplace_links:
                    print("üéØ Status: LOGGED IN (found marketplace)")
                    
                    # ‡∏•‡∏≠‡∏á‡πÑ‡∏õ marketplace
                    print("üõçÔ∏è  Testing marketplace navigation...")
                    driver.get("https://www.facebook.com/marketplace")
                    time.sleep(5)
                    
                    marketplace_url = driver.current_url
                    print(f"üìç Marketplace URL: {marketplace_url}")
                    
                    if "marketplace" in marketplace_url:
                        print("‚úÖ MARKETPLACE SUCCESS!")
                        
                        # ‡∏´‡∏≤ search box
                        search_boxes = driver.find_elements(By.XPATH, "//input[@placeholder='Search Marketplace' or @placeholder='‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô Marketplace']")
                        print(f"üîç Search boxes found: {len(search_boxes)}")
                        
                        if search_boxes:
                            print("üéâ READY FOR SCRAPING!")
                        else:
                            print("‚ö†Ô∏è  No search box found")
                    else:
                        print("‚ùå Could not access marketplace")
                        
                elif login_forms and password_forms:
                    print("üîë Status: NEED LOGIN (found login form)")
                    print("üí° Please login manually in Firefox first")
                    
                else:
                    print("‚ùì Status: UNKNOWN")
                    
                    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô
                    try:
                        body_text = driver.find_element(By.TAG_NAME, "body").text[:300]
                        print(f"üìÑ Page content: {body_text}")
                    except:
                        pass
                    
            except Exception as e:
                print(f"‚ö†Ô∏è  Could not check status: {e}")
                
        else:
            print("‚ùå FAILED - Did not reach Facebook")
            print(f"Got redirected to: {current_url}")
            
        # Page source length
        page_length = len(driver.page_source)
        print(f"üìÑ Page content length: {page_length} characters")
        
        input("\n‚è∏Ô∏è  Press Enter to close Firefox...")
        driver.quit()
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        print("üí° Make sure Firefox is installed and profile exists")

if __name__ == "__main__":
    test_facebook_firefox()